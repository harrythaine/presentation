name: Deploy Chatbot

on:
  workflow_dispatch:
    inputs:
      manual-trigger:
        description: 'Manually trigger the workflow'
        default: 'true'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup AWS Credentials
      env:
        TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        echo "TF_VAR_AWS_ACCESS_KEY_ID=$TF_VAR_AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
        echo "TF_VAR_AWS_SECRET_ACCESS_KEY=$TF_VAR_AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
    
    

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.9
    
    - name: Debug Directory Content
      run: ls -R
  
    - name: Debug Docker Build Context
      run: |
        pwd
        ls -R
        cd ./chatbotterraform/ecs
        pwd
        ls -R
    
    
    - name: Terraform Init
      run: terraform init 

    - name: Terraform Validate
      run: terraform validate 

    - name: Debug Terraform Variables
      run: |
        echo "TF_VAR_AWS_ACCESS_KEY_ID=$TF_VAR_AWS_ACCESS_KEY_ID"
        echo "TF_VAR_AWS_SECRET_ACCESS_KEY=$TF_VAR_AWS_SECRET_ACCESS_KEY"

    - name: Build and Push Docker Image
      run: |
        cd ./chatbotterraform/ecs
        docker build -t ghcr.io/${{ github.repository }}/htb-bot:latest .
        docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_TOKEN }}
        docker push ghcr.io/${{ github.repository }}/htb-bot:latest
    
    - name: Debug Terraform Environment Variables
      run: |
          echo "Printing environment variables for debugging:"
          env | grep TF_VAR
      
    - name: Debug Terraform Configurations
      run: |
          echo "Printing Terraform configurations:"
          cat ./main.tf  # Adjust the path accordingly
          cat ./variables.tf  # Adjust the path accordingly
          # Include similar lines for other relevant Terraform configuration files
      
    - name: Debug Terraform Version
      run: terraform --version

    - name: Debug GitHub Actions Environment Variables
      run: |
        echo "Printing GitHub Actions environment variables for debugging:"
        env
    - name: Output Terraform Variables
      run: |
        echo "TF_VAR_AWS_ACCESS_KEY_ID=${TF_VAR_AWS_ACCESS_KEY_ID}"
        echo "TF_VAR_AWS_SECRET_ACCESS_KEY=${TF_VAR_AWS_SECRET_ACCESS_KEY}"
      
    - name: Terraform Plan
      run: | 
        echo "TF_VAR_AWS_ACCESS_KEY_ID=$TF_VAR_AWS_ACCESS_KEY_ID"
        echo "TF_VAR_AWS_SECRET_ACCESS_KEY=$TF_VAR_AWS_SECRET_ACCESS_KEY"
        terraform plan 
      env:
        TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Confirm Deployment
      run: |
        echo "This is a manual approval step."
        echo "Review the Terraform plan and confirm whether to deploy or not."

    - name: Terraform Apply
      if: github.event.inputs.manual-trigger == 'true'
      env:
        TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve 

    - name: Confirm Destroy
      run: |
        echo "This is a manual approval step to destroy what was just created."
        echo "Review the Terraform plan and confirm whether to destroy or not."

    - name: Terraform Destroy
      if: github.event.inputs.manual-trigger == 'true'
      env:
        TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform destroy -auto-approve 
